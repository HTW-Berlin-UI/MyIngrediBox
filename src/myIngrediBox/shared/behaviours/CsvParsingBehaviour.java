package myIngrediBox.shared.behaviours;

import java.io.File;
import java.io.IOException;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

import com.fasterxml.jackson.annotation.JsonView;
import com.fasterxml.jackson.core.JsonEncoding;
import com.fasterxml.jackson.core.JsonFactory;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.databind.MappingIterator;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.dataformat.csv.CsvMapper;
import com.fasterxml.jackson.dataformat.csv.CsvSchema;

import jade.core.behaviours.OneShotBehaviour;

public class CsvParsingBehaviour extends OneShotBehaviour
{
	
	private String path;


	public CsvParsingBehaviour(String path) {
		super();
		this.path = path;
	}


	@Override
	public void action()
	{
		
		 File input = new File("assets/recipes/EierkuchenSpezial.csv");
	        File output = new File("assets/recipes/EierkuchenSpezial_autogenerated.json");
	     
	        List<Map<?, ?>> data;
			try
			{
				data = readObjectsFromCsv(input);
				writeAsJson(data, output);
			} catch (IOException e1)
			{
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
	        
//	        
//	        JsonFactory factory = new JsonFactory();
	//
//	        JsonGenerator generator = factory.createGenerator(
//	            new File("assets/recipes/output.json"), JsonEncoding.UTF8);
//	     
//	        generator.writeStartObject();
//	        generator.writeStringField("brand", "Mercedes");
//	        generator.writeNumberField("doors", 5);
//	        generator.writeEndObject();
	//
//	        generator.close();
		
	}

	
	public static List<Map<?, ?>> readObjectsFromCsv(File file) throws IOException {
        CsvSchema bootstrap = CsvSchema.emptySchema().withHeader();
        CsvMapper csvMapper = new CsvMapper();
        MappingIterator<Map<?, ?>> mappingIterator = csvMapper.reader(Map.class).with(bootstrap).readValues(file);

        return mappingIterator.readAll();
    }

    public static void writeAsJson(List<Map<?, ?>> data, File file) throws IOException {
        ObjectMapper mapper = new ObjectMapper();
        mapper.writeValue(file, data);
    }
}
